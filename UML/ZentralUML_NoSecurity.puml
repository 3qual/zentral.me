[200~@startuml
' Настраиваем стиль (не обязательно)
skinparam classAttributeIconSize 0
skinparam linetype ortho

'
'  КЛАССЫ
'
class User {
  + ID: UUID 
  + IsActive: Boolean        *Если false, учетная запись удалена
  + IsVisible: Boolean        *Если false, другие пользователи не смогут найти через поиск
  + Name: String        *Отображаемое имя, неуникальное, видно другим пользователям        '             
  + Username: String        ^Unique    *Юзернэйм для аутентификации, виден другим пользователям        '
  + PasswordHash: String        *Хэш пароля        '
  + Email: String        ^Unique    *Эл. почта для аутэнтификации        '
  + IsVerified: Boolean        *Верифицированна почта или нет
  + PrimaryCurrency: String        *Валюта в которую все будет переводиться и отображаться        '
  + AvatarPath: String        *Путь на сервере к файлу аватарки пользователя        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class Transaction {
  + ID: UUID
  + Type: String        *Покупка/перевод/и тд        '
  + Name: String        *Имя транзакции        '
  + Date: DateTime        *Дата проведенния транзакции        '
  + MerchantName: String        *Название компании / имя человека у которой была совершена покупка или которой были переведенны деньги        '
  + TotalAmount: Decimal        *С учетом налогов и всего остального, списанная сумма        '
  + Currency: String        *Валюта в которой была совершена транзакция        '
  + RecognizedText: Text        *Все что было считанно с фото через OCR        '
  + Description: Text        *Купленные товары/иные детали        '
  + Category: String        *Категория транзакции, например: продукты, платеж по кредиту и тд        '
  + LocationName: String        *Название места, где была совершена транзакция        '
  + LocationAddress: String        *Адресс места, где была совершена транзакция        '
  + LocationCoordinates: String        *Координаты места, где была совершена транзакция        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class Image {
  + ID: UUID
  + TransactionID: UUID
  + OriginalImagePath: String        *Путь на сервере к оригинальному файлу фото        '
  + ProcessedImagePath: String        *Путь на сервере к сжатому файлу фото для отправки в OCR        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class Folder {
  + ID: UUID
  + Name: String        *Неуникальное название папки        '
  + IconPath: String        *Путь к файлу иконки папки        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class RefreshToken {
  + ID: UUID
  + UserID: UUID
  + Token: String
  + ExpiryDate: DateTime
  + Revoked: Boolean        *Если true, невозможно использовать
  + SessionID: UUID        *ID сессии, к которой относится токен        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class AccessToken {
  + ID: UUID
  + UserID: UUID
  + Token: String
  + ExpiryDate: DateTime
  + SessionID: UUID        *ID сессии, к которой относится токен        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

class Session {
  + ID: UUID
  + UserID: UUID
  + DeviceName: String        *Имя устройства или модель устройства на котором запущена сессия        '
  + DeviceType: String        *Тип устройства, например: iPhone, Android, WEB и тд        '         
  + DeviceIP: String        *Внешний IP адресс устройства        '
  + LastActivity: DateTime        *Время последней активности во время сессии        '        
  + Active: Boolean        *Если false, сессия закрыта
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

' Связующая сущность для «многие ко многим» между Folder и Transaction
class FolderTransaction {
  + FolderID: UUID
  + TransactionID: UUID
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

' Сущность для управления доступом пользователей к папкам
class Collaborator {
  + ID: UUID
  + FolderID: UUID
  + UserID: UUID
  + Role: String        *owner, editor, viewer        '
  --
  + CreatedAt: DateTime
  + UpdatedAt: DateTime
}

' Связи
User "1" -- "many" Folder : "может иметь доступ к"
User "1" -- "many" Transaction : "владеет"
User "1" -- "many" Session : "имеет"
User "1" -- "many" RefreshToken : "имеет"
User "1" -- "many" AccessToken : "имеет"

Folder "1" -- "many" FolderTransaction
Transaction "1" -- "many" FolderTransaction

Transaction "1" -- "many" Image : "хранит"

Folder "1" -- "many" Collaborator
Collaborator "many" -- "1" User : "имеет роль в"

Session "1" -- "many" RefreshToken : "содержит"
Session "1" -- "many" AccessToken : "содержит"
@enduml
